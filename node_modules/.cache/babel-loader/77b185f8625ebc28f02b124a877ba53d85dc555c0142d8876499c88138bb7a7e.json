{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/GitHub/react-random-photo/src/components/Fetch-data.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Fetch.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RandomPhotos() {\n  _s();\n  const [photos, setPhotos] = useState([]);\n  const [isGrayscale, setIsGrayscale] = useState(false);\n  const [visiblePhotos, setVisiblePhotos] = useState(4);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    async function fetchData() {\n      setIsLoading(true);\n      setTimeout(async () => {\n        const response = await fetch('https://picsum.photos/v2/list');\n        const data = await response.json();\n        setPhotos(data);\n        setIsLoading(false);\n      }, 1000);\n    }\n    fetchData();\n  }, []);\n  const handleFetchNewPhotos = async () => {\n    setIsLoading(true);\n    setTimeout(async () => {\n      const response = await fetch('https://picsum.photos/v2/list');\n      const data = await response.json();\n      setPhotos(data);\n      setIsLoading(false);\n    }, 1000);\n  };\n  const handleLoadMorePhotos = () => {\n    setVisiblePhotos(visiblePhotos + 4);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"butt1\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-check form-switch\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          className: \"form-check-input\",\n          role: \"switch\",\n          id: \"grayscale-toggle\",\n          checked: isGrayscale,\n          onChange: () => setIsGrayscale(!isGrayscale)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"grayscale-toggle\",\n          children: \":Grayscale \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary\",\n        onClick: handleFetchNewPhotos,\n        children: \"Fetch New Photos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"spinner-border text-primary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"photos-container\",\n      children: photos.sort(() => 0.5 - Math.random()).slice(0, visiblePhotos).map(photo => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"photo-with-text\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://picsum.photos/id/${photo.id}/300/300`,\n          alt: photo.author,\n          className: \"photo\",\n          style: {\n            filter: isGrayscale ? 'grayscale(100%)' : 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"photo-text\",\n          children: photo.author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this)]\n      }, photo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"butt2\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-info\",\n        onClick: handleLoadMorePhotos,\n        children: \"Load More Photos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(RandomPhotos, \"uToD2NGI0SyyffDgbOuUJkl5kWo=\");\n_c = RandomPhotos;\nexport default RandomPhotos;\nvar _c;\n$RefreshReg$(_c, \"RandomPhotos\");","map":{"version":3,"names":["React","useState","useEffect","RandomPhotos","photos","setPhotos","isGrayscale","setIsGrayscale","visiblePhotos","setVisiblePhotos","isLoading","setIsLoading","fetchData","setTimeout","response","fetch","data","json","handleFetchNewPhotos","handleLoadMorePhotos","sort","Math","random","slice","map","photo","id","author","filter"],"sources":["/Users/admin/Documents/GitHub/react-random-photo/src/components/Fetch-data.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Fetch.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nfunction RandomPhotos() {\n  const [photos, setPhotos] = useState([]);\n  const [isGrayscale, setIsGrayscale] = useState(false);\n  const [visiblePhotos, setVisiblePhotos] = useState(4);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    async function fetchData() {\n      setIsLoading(true);\n      setTimeout(async () => {\n        const response = await fetch('https://picsum.photos/v2/list');\n        const data = await response.json();\n        setPhotos(data);\n        setIsLoading(false);\n      }, 1000);\n    }\n    fetchData();\n  }, []);\n\n  const handleFetchNewPhotos = async () => {\n    setIsLoading(true);\n    setTimeout(async () => {\n      const response = await fetch('https://picsum.photos/v2/list');\n      const data = await response.json();\n      setPhotos(data);\n      setIsLoading(false);\n    }, 1000);\n  };\n\n  const handleLoadMorePhotos = () => {\n    setVisiblePhotos(visiblePhotos + 4);\n  };\n\n  return (\n    <div className='' >\n      <div className='butt1' >\n      <div className=\"form-check form-switch\">\n      <input  \n        type=\"checkbox\"\n        className=\"form-check-input\"\n        role=\"switch\"\n        id=\"grayscale-toggle\"\n        checked={isGrayscale}\n        onChange={() => setIsGrayscale(!isGrayscale)}\n      />\n       <label htmlFor=\"grayscale-toggle\">:Grayscale </label>\n      </div>\n      <button type=\"button\" className=\"btn btn-primary\" onClick={handleFetchNewPhotos}>Fetch New Photos</button>\n      </div>\n\n      {isLoading ? (\n        <div class=\"spinner-border text-primary\"></div>\n      ) : (\n        <div className=\"photos-container\">\n          {photos\n            .sort(() => 0.5 - Math.random())\n            .slice(0, visiblePhotos)\n            .map(photo => (\n              <div key={photo.id} className=\"photo-with-text\">\n              <img\n                src={`https://picsum.photos/id/${photo.id}/300/300`}\n                alt={photo.author}\n                className=\"photo\"\n                style={{ filter: isGrayscale ? 'grayscale(100%)' : 'none' }}\n              />\n              <div className=\"photo-text\">{photo.author}</div>\n              </div>\n            ))}\n        </div>\n      )}\n      <div className='butt2'>\n      <button type=\"button\" className=\"btn btn-info\" onClick={handleLoadMorePhotos}>Load More Photos</button>\n      </div>\n    </div>\n  );\n}\n\nexport default RandomPhotos;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}