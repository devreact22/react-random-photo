{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/react-app-photo/src/components/Fetch-data.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction RandomPhotos() {\n  _s();\n  const [photos, setPhotos] = useState([]);\n  const [isGrayscale, setIsGrayscale] = useState(false);\n  const [visiblePhotos, setVisiblePhotos] = useState(4);\n  useEffect(() => {\n    // fetch data from API\n    async function fetchData() {\n      const response = await fetch('https://picsum.photos/v2/list');\n      const data = await response.json();\n      setPhotos(data);\n    }\n    fetchData();\n  }, []);\n\n  // function fetch new 4 photo inside the button \n  const handleFetchNewPhotos = async () => {\n    const response = await fetch('https://picsum.photos/v2/list');\n    const data = await response.json();\n    setPhotos(data);\n  };\n\n  // add 4 photo in the page randome \n  const handleLoadMorePhotos = () => {\n    setVisiblePhotos(visiblePhotos + 4);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"grayscale-toggle\",\n        children: \"Grayscale: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: \"grayscale-toggle\",\n        checked: isGrayscale,\n        onChange: () => setIsGrayscale(!isGrayscale)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFetchNewPhotos,\n        children: \"Fetch New Photos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: photos.sort(() => 0.5 - Math.random()).slice(0, visiblePhotos).map(photo => /*#__PURE__*/_jsxDEV(\"img\", {\n            className: {\n              col: 2\n            },\n            src: `https://picsum.photos/id/${photo.id}/300/300`,\n            alt: photo.author,\n            style: {\n              filter: isGrayscale ? 'grayscale(100%)' : 'none'\n            }\n          }, photo.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 11\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLoadMorePhotos,\n        children: \"Load More Photos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(RandomPhotos, \"Ns6K8AuI4eXEmD0HUCMoa/fryqw=\");\n_c = RandomPhotos;\nexport default RandomPhotos;\nvar _c;\n$RefreshReg$(_c, \"RandomPhotos\");","map":{"version":3,"names":["React","useState","useEffect","RandomPhotos","photos","setPhotos","isGrayscale","setIsGrayscale","visiblePhotos","setVisiblePhotos","fetchData","response","fetch","data","json","handleFetchNewPhotos","handleLoadMorePhotos","sort","Math","random","slice","map","photo","col","id","author","filter"],"sources":["/Users/admin/Desktop/react-app-photo/src/components/Fetch-data.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction RandomPhotos() {\n  const [photos, setPhotos] = useState([]);\n  const [isGrayscale, setIsGrayscale] = useState(false);\n  const [visiblePhotos, setVisiblePhotos] = useState(4);\n\n  useEffect(() => {\n\n    // fetch data from API\n    async function fetchData() {\n      const response = await fetch('https://picsum.photos/v2/list');\n      const data = await response.json();\n      setPhotos(data);\n    }\n    fetchData();\n  }, []);\n\n  // function fetch new 4 photo inside the button \n  const handleFetchNewPhotos = async () => {\n    const response = await fetch('https://picsum.photos/v2/list');\n    const data = await response.json();\n    setPhotos(data);\n  };\n\n  // add 4 photo in the page randome \n  const handleLoadMorePhotos = () => {\n    setVisiblePhotos(visiblePhotos + 4);\n  };\n\n  return (\n    <>\n    <div>\n      <label htmlFor=\"grayscale-toggle\">Grayscale: </label>\n      <input\n        type=\"checkbox\"\n        id=\"grayscale-toggle\"\n        checked={isGrayscale}\n        onChange={() => setIsGrayscale(!isGrayscale)}\n      />\n      <button onClick={handleFetchNewPhotos}>Fetch New Photos</button>\n      <div className=\"container\">\n       <div className='row'>\n        {photos\n        .sort(() => 0.5 - Math.random())\n        .slice(0, visiblePhotos)\n        .map( photo => (  \n          <img\n            className={{col:2}} \n            key={photo.id}\n            src={`https://picsum.photos/id/${photo.id}/300/300`}\n            alt={photo.author}\n            style={{ filter: isGrayscale ? 'grayscale(100%)' : 'none' }}\n          /> \n         \n        )  ) }</div>\n         </div>\n\n        \n        \n      <button onClick={handleLoadMorePhotos}>Load More Photos</button>\n   \n    </div>\n    </>\n  );\n}\n\nexport default RandomPhotos;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAAA;AAEnD,SAASC,YAAY,GAAG;EAAA;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACK,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACO,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAErDC,SAAS,CAAC,MAAM;IAEd;IACA,eAAeQ,SAAS,GAAG;MACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,CAAC;MAC7D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;MAClCT,SAAS,CAACQ,IAAI,CAAC;IACjB;IACAH,SAAS,EAAE;EACb,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMK,oBAAoB,GAAG,YAAY;IACvC,MAAMJ,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,CAAC;IAC7D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;IAClCT,SAAS,CAACQ,IAAI,CAAC;EACjB,CAAC;;EAED;EACA,MAAMG,oBAAoB,GAAG,MAAM;IACjCP,gBAAgB,CAACD,aAAa,GAAG,CAAC,CAAC;EACrC,CAAC;EAED,oBACE;IAAA,uBACA;MAAA,wBACE;QAAO,OAAO,EAAC,kBAAkB;QAAA,UAAC;MAAW;QAAA;QAAA;QAAA;MAAA,QAAQ,eACrD;QACE,IAAI,EAAC,UAAU;QACf,EAAE,EAAC,kBAAkB;QACrB,OAAO,EAAEF,WAAY;QACrB,QAAQ,EAAE,MAAMC,cAAc,CAAC,CAACD,WAAW;MAAE;QAAA;QAAA;QAAA;MAAA,QAC7C,eACF;QAAQ,OAAO,EAAES,oBAAqB;QAAA,UAAC;MAAgB;QAAA;QAAA;QAAA;MAAA,QAAS,eAChE;QAAK,SAAS,EAAC,WAAW;QAAA,uBACzB;UAAK,SAAS,EAAC,KAAK;UAAA,UAClBX,MAAM,CACNa,IAAI,CAAC,MAAM,GAAG,GAAGC,IAAI,CAACC,MAAM,EAAE,CAAC,CAC/BC,KAAK,CAAC,CAAC,EAAEZ,aAAa,CAAC,CACvBa,GAAG,CAAEC,KAAK,iBACT;YACE,SAAS,EAAE;cAACC,GAAG,EAAC;YAAC,CAAE;YAEnB,GAAG,EAAG,4BAA2BD,KAAK,CAACE,EAAG,UAAU;YACpD,GAAG,EAAEF,KAAK,CAACG,MAAO;YAClB,KAAK,EAAE;cAAEC,MAAM,EAAEpB,WAAW,GAAG,iBAAiB,GAAG;YAAO;UAAE,GAHvDgB,KAAK,CAACE,EAAE;YAAA;YAAA;YAAA;UAAA,QAMhB;QAAG;UAAA;UAAA;UAAA;QAAA;MAAQ;QAAA;QAAA;QAAA;MAAA,QACL,eAIT;QAAQ,OAAO,EAAER,oBAAqB;QAAA,UAAC;MAAgB;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA;EAE5D,iBACH;AAEP;AAAC,GA/DQb,YAAY;AAAA,KAAZA,YAAY;AAiErB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}